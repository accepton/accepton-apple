// Generated by Apple Swift version 2.1 (swiftlang-700.1.101.6 clang-700.1.76)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@protocol AcceptOnUIMachineDelegate;

SWIFT_CLASS("_TtC8accepton17AcceptOnUIMachine")
@interface AcceptOnUIMachine : NSObject
- (nonnull instancetype)initWithPublicKey:(NSString * __nonnull)publicKey isProduction:(BOOL)isProduction;
- (nonnull instancetype)initWithSecretKey:(NSString * __nonnull)secretKey isProduction:(BOOL)isProduction;
@property (nonatomic, weak) id <AcceptOnUIMachineDelegate> __nullable delegate;
- (void)beginForItemWithDescription:(NSString * __nonnull)description forAmountInCents:(NSInteger)amountInCents;
- (void)creditCardFieldDidFocusWithName:(NSString * __nonnull)name;
- (void)creditCardFieldDidLoseFocus;
- (void)creditCardFieldWithName:(NSString * __nonnull)name didUpdateWithString:(NSString * __nonnull)string;
- (void)creditCardReset;
- (void)creditCardPayClicked;
- (void)paypalClicked;
- (void)applePayClicked;
@end

@class NSError;
@class AcceptOnUIMachineFormOptions;

SWIFT_PROTOCOL("_TtP8accepton25AcceptOnUIMachineDelegate_")
@protocol AcceptOnUIMachineDelegate
@optional
- (void)acceptOnUIMachineDidFailBegin:(NSError * __nonnull)error;
- (void)acceptOnUIMachineDidFinishBeginWithFormOptions:(AcceptOnUIMachineFormOptions * __nonnull)options;
- (void)acceptOnUIMachineShowValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name withMessage:(NSString * __nonnull)msg;
- (void)acceptOnUIMachineEmphasizeValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name withMessage:(NSString * __nonnull)msg;
- (void)acceptOnUIMachineHideValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name;
- (void)acceptOnUIMachineCreditCardTypeDidChange:(NSString * __nonnull)type;
- (void)acceptOnUIMachinePaymentIsProcessing:(NSString * __nonnull)paymentType;
- (void)acceptOnUIMachinePaymentDidAbortPaymentMethodWithName:(NSString * __nonnull)name;
- (void)acceptOnUIMachinePaymentErrorWithMessage:(NSString * __nonnull)message;
- (void)acceptOnUIMachinePaymentDidSucceedWithCharge:(NSDictionary<NSString *, id> * __nonnull)chargeInfo;
- (void)acceptOnUIMachineSpecFieldUpdatedSuccessfullyWithName:(NSString * __nonnull)name withValue:(NSString * __nonnull)value;
@end


SWIFT_CLASS("_TtC8accepton28AcceptOnUIMachineFormOptions")
@interface AcceptOnUIMachineFormOptions : NSObject
@property (nonatomic, readonly, copy) NSString * __nonnull itemDescription;
@property (nonatomic, readonly) NSInteger amountInCents;
@property (nonatomic, readonly) BOOL hasCreditCardForm;
@property (nonatomic, readonly) BOOL hasPaypalButton;
@property (nonatomic, readonly) BOOL hasApplePay;
@property (nonatomic, readonly, copy) NSString * __nonnull uiAmount;
@end


@interface AcceptOnUIMachineFormOptions (SWIFT_EXTENSION(accepton))
@end

@protocol AcceptOnViewControllerDelegate;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8accepton22AcceptOnViewController")
@interface AcceptOnViewController : UIViewController <AcceptOnUIMachineDelegate>
@property (nonatomic, weak) id <AcceptOnViewControllerDelegate> __nullable delegate;
@property (nonatomic, copy) NSString * __nullable accessToken;
@property (nonatomic) BOOL isProduction;
@property (nonatomic, copy) NSString * __nullable itemDescription;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)acceptOnUIMachineDidFinishBeginWithFormOptions:(AcceptOnUIMachineFormOptions * __nonnull)options;
- (void)acceptOnUIMachineShowValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name withMessage:(NSString * __nonnull)msg;
- (void)acceptOnUIMachineHideValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name;
- (void)acceptOnUIMachineEmphasizeValidationErrorForCreditCardFieldWithName:(NSString * __nonnull)name withMessage:(NSString * __nonnull)msg;
- (void)acceptOnUIMachineCreditCardTypeDidChange:(NSString * __nonnull)type;
- (void)acceptOnUIMachinePaymentDidAbortPaymentMethodWithName:(NSString * __nonnull)name;
- (void)acceptOnUIMachinePaymentIsProcessing:(NSString * __nonnull)paymentType;
- (void)acceptOnUIMachinePaymentDidSucceedWithCharge:(NSDictionary<NSString *, id> * __nonnull)chargeInfo;
- (void)acceptOnUIMachinePaymentErrorWithMessage:(NSString * __nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8accepton30AcceptOnViewControllerDelegate_")
@protocol AcceptOnViewControllerDelegate
@optional
- (void)acceptOnCancelWasClicked:(AcceptOnViewController * __nonnull)vc;
- (void)acceptOnPaymentDidSucceed:(AcceptOnViewController * __nonnull)vc withChargeInfo:(NSDictionary<NSString *, id> * __nonnull)chargeInfo;
@end


@interface UIImage (SWIFT_EXTENSION(accepton))
@end

#pragma clang diagnostic pop
